Open source release notes: https://wiki.eclipse.org/Scout/NewAndNoteworthy/6.0

AWE 16.12.2014
org.eclipse.scout.rt.client.ui.desktop.AbstractDesktop
API isOutlineChanging hinzugef端gt

org.eclipse.scout.rt.client.ui.form.fields.AbstractFormField
API set/isStatusVisible hinzugef端gt

AWE 17.12.2014 [Bug 456408]
org.eclipse.scout.rt.client.ui.form.AbstractForm
API get/setBasicTitle entfernt
API get/setSubTitle hinzugef端gt
API PROP_SUB_TITLE hinzugef端gt
composeTitle entfernt (GUI-Logik)

AWE 05.01.2015 [Bug 456409]
org.eclipse.scout.rt.client.ui.desktop.outline.pages.IPage
API merged IPageWithTable and IPageWithNodes and moved duplicated methods to IPage
   IPage now has a T getTable() method, also changed abstract classes implementing
   these interfaces. IPage now expects a type parameter for the table.
API IPage:
  added T getTable();
  added boolean isDetailFormVisible();
  added void setDetailFormVisible(boolean visible);
  added ITreeNode getTreeNodeFor(ITableRow tableRow);
  added IPage getPageFor(ITableRow tableRow);
  added ITableRow getTableRowFor(ITreeNode treeNode);
  added List<ITableRow> getTableRowsFor(Collection<? extends ITreeNode> treeNodes);
API IPageWithNodes:
  replaced by getTable > ITable getInternalTable();
  moved to IPage > ITreeNode getTreeNodeFor(ITableRow tableRow);
  moved to IPage > ITableRow getTableRowFor(ITreeNode childPageNode);
API IPageWithTable:
  moved to IPage > T getTable();
  moved to IPage > ITreeNode getTreeNodeFor(ITableRow tableRow);
  moved to IPage > ITableRow getTableRowFor(ITreeNode childPageNode);
  moved to IPage > List<ITableRow> getTableRowsFor(Collection<? extends ITreeNode> childPageNodes);

Migration search/replace:
  Alle "IPage " suchen und ersetzen mit "IPage<?> "
  Alle "List<IPage>" suchen und ersetzen mit "List<IPage<?>>"

AWE 07.01.2015
org.eclipse.scout.rt.shared.ui.UiLayer
API removed values JSP, JSF, RAP, SWING
    added value HTML

org.eclipse.scout.rt.shared.ui.UserAgentUtility
API removed static boolean isRapUi(), static boolean isSwingUi()

CGU 07.01.2015
Improved page detail form handling:
The detail form is now created and started when the page gets activated and closed when the page gets disposed, similar to the search form.
API added getConfiguredDetailForm, execInitDetailForm, createDetailForm, startDetailForm

Migration:
Remove the detail form handling code from execPageActivated / execPageDeactivated / execPageDisposed
and use either getConfiguredDetailForm / execInitDetailForm or createDetailForm.

CGU 07.01.2015
Improved page search form disposal:
Search form is now closed when the page gets disposed.

Migration:
none

CGU 07.01.2015
Simplified form tool buttons:
Refactored api to be consistent with detail and search form handling of a page.
Removed code not necessary for html ui.

Migration:
Remove the form handling code from execStartForm and use either getConfiguredForm / execInitForm or createForm.

CGU 07.01.2015
API Added IForm#start()
Mainly useful for forms with just one handler. (detail forms, tool forms etc.). Maybe implemented by the concrete form.
The default implementation at AbstractForm uses getHandler() to start the form.
