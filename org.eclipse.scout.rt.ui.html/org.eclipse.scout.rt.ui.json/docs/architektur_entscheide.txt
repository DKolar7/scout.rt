Aufteilung zwischen GUI-Elementen und Server / Model-Interaktion?
- z.B. Table schickt Server Event im Selektions-Code. Alternative wäre ein Listener, welcher auf Selektion hört und dort den Event schickt.
- Vorteil des Listeners: Saubere Trennung, Komponenten könnten einfacher ersetzt werden?
- Nachteil: Eventuell unnötiger Zusatzaufwand

Session.js vs. ClientSession.js.
- Dasselbe oder aufteilen? Auf dem Server gibt es heute JsonSession und JsonClientSession

Attach / Detach vs. new Scout.DesktopTable()
- Attach geht lange bei grossen Objekten (z.B. table mit 800 Rows)

Clientseitige Model-Handler wann erstellen? Von Gui-Komponenten trennen?
- Beispiel: Server schickt nodes und pro node table gleich mit, table darf aber noch nicht gerendert werden (wäre spezifisch für desktoptree)
  Aktuell wird einfach ein JsonDesktopTable erzeugt ohne gui, damit table events behandelt werden können.
- Soll die Erzeugung vom Server getriggert werden mittels create events? Aktuell wird die table einfach mit den nodes mitgeschickt

