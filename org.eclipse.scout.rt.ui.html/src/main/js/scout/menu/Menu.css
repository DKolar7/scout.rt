/* This class is used for menu items styling */

@menu-margin-x: @bench-margin-x;
@menu-item-margin-right: 14px;
@menu-item-height: 39px;

/* Mixins */
.menu-icon {
  display: inline-block;
  font-size: 18px;
  color: @icon-color;
  vertical-align: -3px;
}

.menu-context {
  .drop-shadow;
  border: 1px solid @border-color;
}

.sub-menu-icon {
  display: inline-block;
  position: relative;
  left: 0px;
  top: 3px;
  .font-icon;
  line-height: 18px;
  font-size: 18px;
  padding-left: 10px;
  content: @icon-angle-down;
}

/* Styles */

.menu-separator {
  width: 1px;
  height: 30px;
  margin: 6px 19px 3px 19px - @menu-item-margin-right;
  background-color: @border-color;
}

.menu-item {
  height: @menu-item-height;
  line-height: @menu-item-height;
  white-space: nowrap;
  cursor: pointer;
  display: inline-block;

  & > .font-icon {
    .menu-icon;
    font-size: 18px;
    height: @logical-grid-height;
    line-height: @logical-grid-height - 4px;
    /* Prepare for focus border: */
    border: 1px solid transparent;
    margin-left: -2px;
    margin-right: -2px;
    padding-left: 2px;
    padding-right: 2px;
  }

  /* This definition is required because the negative margin causes wrong results
   * when we check if the menu-bar is over-sized. When a float:right element has
   * a negative margin, the scrollWidth of its parent is _always_ > its clientWidth
   * just because of the negative margin. Furthermore we have no way to read the
   * margin dynamically with JQuery, since ::before elements are not part of the DOM
   * and thus there's no way to access the with JavaScript. When the negative margin
   * is removed above, this definition may also be removed.
   */
  &.right-aligned.last[data-icon]::before {
    margin-right: 0;
    padding-right: 0;
  }

  &[data-icon]:hover::before {
    color: @hover-color;
  }

  &:hover {
    color: @hover-color;
  }

  &.disabled {
    color: @disabled-color;
    cursor: default;
  }

  &[data-icon].disabled::before {
    color: @disabled-color;
  }

  &:not(.last) {
    margin-right: @menu-item-margin-right;
  }

  &:focus {
    outline: none;
    color: @hover-color;
  }

  /* Draw border for icon only items */
  &:not(.menu-textandicon):focus::before {
    .focus-border;
  }

  &.menu-open {
    color: @active-color;
  }

  &.has-submenu::after {
   .sub-menu-icon;
  }

  &.selected:not(.menu-button) {
    background-color: @item-selection-background-color;
    border-color: @item-selection-border-color;
  }
}

.right-aligned {
  float: right;
}

.menu-textandicon > .icon {
  padding-right: 5px;
}

.popup {
  position: absolute;
  margin: auto;

  & > .popup-head {
    position: absolute;
    line-height: @menu-item-height;
    padding: 5px 13px 0 13px;
    white-space: nowrap;
    background-color: white;
    border: solid 1px @border-color;
  }

  &.down > .popup-head {
    border-bottom: none;
    .drop-shadow();
  }

  &.up > .popup-head {
    border-top: none;
    .drop-shadow(@y: -6px;);
  }

  &:focus {
    outline: none;
  }
}

.popup-body {
  position: absolute;
  border: 1px solid @border-color;
  background-color: @palette-white;

  & > .menu-item.context-menu-item-last {
    border-bottom: 1px solid @border-color;
  }

  &.down  {
    border-bottom: none;
    .drop-shadow();

    & > .menu-item.context-menu-item-first {
      border-top-color: transparent;
    }
  }

  &.up {
    border-top: none;
    .drop-shadow(@y: -6px;);

    .popup-head ~ & > .menu-item.context-menu-item-last {
      border-bottom: 1px solid transparent;

      &.selected {
        border-color: @item-selection-border-color;
      }
    }
  }

  & > .menu-item {
    border-top: solid 1px @border-color;
    display: block;
    width: 100%;
    padding-left: 15px;

    &.selected {
      border-top: 1px solid @item-selection-border-color;
      border-color: @item-selection-border-color;
    }

    &.selected + .menu-item{
      border-top-color: @item-selection-border-color;
    }

    &.selected.context-menu-item-first {
      border-top: 1px solid @item-selection-border-color;
    }

    &.selected.context-menu-item-last {
      border-color: @item-selection-border-color;
    }

    &:focus {
      text-decoration: none;
    }
  }
}

.popup-head {
  color: @active-color;

  &.has-submenu::after {
    .sub-menu-icon;
    .transform(rotate(180deg));
    padding-right: 10px;
    padding-left: 0;
    top: 5px;
  }

  & > .font-icon {
    .menu-icon;
    color: @active-color;
  }

  &.in-main-menubar > .font-icon {
    font-size: 22px;
    display: inline-block;
  }

}

.popup-deco {
  position: absolute;
  height: 1px;
  left: 1px;
  background-color:@background-color;
}

/* FIXME AWE: reduce copy/paste --> Button.css */
.menu-button {
  padding: 0 @button-padding;
  text-align: center;
  position: relative;
  height: 30px;
  color: @text-color;
  background-color: @button-background-color;
  border: 1px solid @border-color;
  border-radius: @border-radius;
  cursor: pointer;
  height: @menubar-height;
  line-height: @menubar-height;
  min-width: 110px;

  /* FIXME CGU/BSH: Actually, we wanted to use .overflow-ellipsis-nowrap to support */
  /* ellipsis, but this breaks the focus, because the ::before inline element gets */
  /* cut off. We should find a better solution for this. */
  white-space: nowrap;

  &:hover :not(:disabled) {
    color: @hover-color;
  }

  &:not(.disabled):active {
    background-color: @palette-gray-3;
    border-right-color: @border-color;
    border-bottom-color: @border-color;
  }

  &:focus {
    outline: none;
  }

  &:focus::before {
    .button-focus;
  }

  &.default-menu:not(.disabled) {
    .font-text-normal(@bold);
    background-color: @default-button-background-color;
    color: @default-button-color;
    border-width: 0;

    &:focus {
      color: @default-button-color;
    }

    &:active {
      background-color: @palette-blue-5;
    }
  }

  &.disabled {
    background-color: @palette-white;
    color: @disabled-color;
    cursor: default;
  }

  &.selected {
  border-style: inset;
    border-right-color: @border-color;
    border-bottom-color: @border-color;
  }

  &.has-submenu::after {
   .button-sub-menu-icon;
  }

  &:not(.last) {
    margin-right: @menu-item-margin-right;
  }
}
