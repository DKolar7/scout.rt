@breadcrumb-border-color: @outline-selection-background-color;
@outline-title-border-color: @outline-selection-background-color;
@outline-title-margin-left: 12px;
@outline-title-margin-right: 12px;
@outline-title-margin-bottom: 12px;

/* we have to combine this with .outline, otherwise the definition would not be specific enough */
.outline.tree {
  & .scrollbar-thumb {
    background-color: fade(@scrollbar-thumb-inverted-color, 30%);
  }

  & .scrollbar-thumb-move,
  & .scrollbar-thumb:hover {
    background-color: fade(@scrollbar-thumb-inverted-color, 60%);
  }

  &.in-background .tree-node.selected {
    background-color: @outline-in-background-selection-background-color;
    color: @palette-white;
  }

  & > .outline-title {
    cursor: pointer;
    #scout.font-text-large();
    #scout.overflow-ellipsis-nowrap();
    padding: 24px 2px 13px 6px;
    margin: 0 @outline-title-margin-right @outline-title-margin-bottom @outline-title-margin-left;
    border-bottom: 1px solid @outline-title-border-color;
  }
}

.outline > .tree-data {
  & > .scrollbar.y-axis {
    margin-right: 6px;
  }

  & > .key-box {
    top: 7px !important;
  }

  & > .tree-node,
  & > .animation-wrapper > .tree-node {
    #scout.font-text-plus();
    cursor: pointer;
    border: 0;

    /* leave some space for the scrollbar */
    padding-right: 8px;
    /* set top/bottom padding for item */
    padding-top: 8px;
    padding-bottom: 8px;

    &.group {
      background-color: @outline-group-background-color;
    }

    &.selected {
      color: @outline-selection-color;
      background-color: @outline-selection-background-color;
      border: 0;
    }

     & > .tree-node-control {
      /* adjust control position */
      margin-left: -@outline-node-control-size - 5px;
      margin-top: -3px;

      width: @outline-node-control-size;
      height: @outline-node-control-size;
      line-height: @outline-node-control-size;

      &::before {
        font-size: @outline-node-control-size;
        /* always use same color as the tree-node label */
        color: inherit;
      }

      &:hover::before {
        color: @highlight-color;
      }
    }
  }
}

/* bread crumb mode */
.outline.breadcrumb {

  & > .outline-title {
    text-align: center;
    margin: 0;
  }

  & > .tree-data {
    & > .tree-node,
    & > .animation-wrapper > .tree-node {
      overflow: visible;
      white-space: normal;
      text-align: center;

      display: none;
      border-bottom: 1px solid @breadcrumb-border-color;

      /* !important is necessary here to override the element specific left-padding (calculated by Tree.js for level indentation). */
      padding: 12px 2px !important;

      &.ancestor-of-selected,
      &.child-of-selected,
      &.selected {
        #scout.font-text-plus();
        display: block;
        background-color: @outline-group-background-color;
      }

      &.hidden {
        display: none;
      }

      &.selected {
        background-color: @outline-selection-background-color;
        color: @outline-selection-color;
        cursor: default;
      }

      /* arrow is created using ::before and ::after*/
      &.ancestor-of-selected::before,
      &.ancestor-of-selected::after,
      &.selected::before {
        position: absolute;
        left: 50%;
        margin-left: -13px;
        border: solid transparent;
        content: '';
        height: 0;
        width: 0;
        z-index: 1;
      }

      &.ancestor-of-selected::before {
        border-color: @outline-selection-background-color transparent transparent transparent;
        border-width: 8px 13px 0 13px;
        bottom: -9px;
      }

      &.ancestor-of-selected::after {
        border-color: @outline-group-background-color transparent transparent transparent;
        border-width: 8px 13px 0 13px;
        bottom: -8px;
      }

      &.selected::before {
        border-color: @outline-selection-background-color transparent transparent transparent;
        border-width: 8px 13px 0 13px;
        bottom: -8px;
      }

      &.ancestor-of-selected.leaf::before,
      &.ancestor-of-selected.leaf::after,
      &.selected.leaf::before {
        display: none;
      }
    }

    & > .tree-node-control {
      display: none;
    }
  }
}
