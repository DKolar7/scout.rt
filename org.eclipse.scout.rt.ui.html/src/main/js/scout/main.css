/* (c) Copyright 2013-2014, BSI Business Systems Integration AG */
/* order: position, size, look, others */

/* global section, narrow to .scout for usage as portlet */

/* TODO AWE/CGU: (css) YUI compressor destroys calc(100% + x) expressions (only with plus operator)
 * This bug will be fixed with YUI compressor 2.4.9 which is not released yet:
 * https://github.com/yui/yuicompressor/commits/master
 * We must update maven-yui-compressor-plugin (v >= 1.6.0, with YUI >= 2.4.9) or...
 * Hack the old maven plugin wo work with a new YUI version or...
 * Download YUI 2.4.9 and call as Java program from maven.
 */
body {
  .font-text-normal;
  height: 100%;
  width: 100%;
  margin: 0px;
  overflow: hidden;
  -webkit-touch-callout: none;
  .user-select(none);
  -moz-user-select: -moz-none;
  cursor: default;
  color: @text-color;
}

/* -moz variant is required, see https://bugzilla.mozilla.org/show_bug.cgi?id=509958 */
::-moz-selection {
  .text-selection();
}
::selection {
  .text-selection();
}

::-webkit-input-placeholder {
  .placeholder();
}
:-moz-placeholder { /* older versions of firefox */
  .placeholder();
}
::-moz-placeholder {
  .placeholder();
}
:-ms-input-placeholder {
  .placeholder();
}

/* Hide IE decorations for text input fields: */
/* - Clear button ("X"): https://msdn.microsoft.com/en-us/library/windows/apps/hh465740.aspx */
/* - Password reveal button: https://msdn.microsoft.com/en-us/library/windows/apps/hh465773.aspx */
/* Note: Set width/height to 0 instead of "display: none", because of http://stackoverflow.com/a/17986002 */
::-ms-clear {
  width : 0;
  height: 0;
}
::-ms-reveal {
  width : 0;
  height: 0;
}

.disabled {
  color: @text-disabled-color;

  &::-moz-selection {
    .text-selection-disabled();
  }
  &::selection {
    .text-selection-disabled();
  }

  &::-webkit-input-placeholder {
    .placeholder-disabled();
  }
  &:-moz-placeholder { /* older versions of firefox */
    .placeholder-disabled();
  }
  &::-moz-placeholder {
    .placeholder-disabled();
  }
  &:-ms-input-placeholder {
    .placeholder-disabled();
  }
}

*, *::before, *::after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/* Workaround for firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=648624 */
/* use -moz-none to allow child element to set -moz-user-select: text*/
div {
  -moz-user-select: -moz-none;
}

input, textarea, button {
  .font-text-normal;
}

input, textarea {
  background-color: @control-background-color;
  color: @control-color;
  border: 1px solid @border-color;
  border-radius: @border-radius;

  &.disabled {
    background-color: @control-disabled-background-color;
    color: @control-disabled-color;
  }

  &:focus {
    .focus-border;
  }

  &.has-error {
    border-color: @error-border-color;
    background-color: @error-background-color;
  }

  &.has-error:focus {
    .glow(@error-glow-color);
  }
}

input {
  padding: 0 @text-field-padding;
}

button {
  padding: @button-padding;
}

textarea {
  /* these two properties are required for FF, otherwise the editable textarea is 2px too large, */
  /* and the DOM inspector does not include these 2 pixels. */
  margin: 0 auto;
  padding: 5px @text-field-padding;
  resize: none;
}

/* cursor handling */

/* The following classes are added dynamically while dragging. !important is necessary to override */
/* any cursor an underlying component defines while moving the mouse. */

.col-resize,
.col-resize * {
  cursor: col-resize !important;
}
.row-resize,
.row-resize * {
  cursor: row-resize !important;
}

/* remove the dotted border in firefox */
button::-moz-focus-inner {
  border: 0;
}

/* hidden DIV used to measure string length in UI */
#ScoutStringMeasurement {
  position: absolute;
  visibility: hidden;
  height: auto;
  width: auto;
}

.drag-handle {
  content: '';
  width: 100%;
  height: 20px;
  position: absolute;
  top: 0px;
  left: 0px;
  margin-top: -5px;
  cursor: move;
}

/* Used to display errors from server when desktop is not available */
.fatal-error {
  margin: 10px;
  .user-select(text)
}

.application-loading {
  @application-loading-size: 50px;

  /* Make it use the whole available size, to show the 'wait' mouse cursor */
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;

  &::before {
    content: '';
    border-radius: @application-loading-size;
    border: 3px solid @palette-gray-4;
    border-right-color: @palette-blue-4;
    width: @application-loading-size;
    height: @application-loading-size;
    position: absolute;
    top: 50%;
    left: 50%;
    margin-left: -(@application-loading-size / 2);
    margin-top: -((@application-loading-size / 2) + 20px);
    .animation(rotation 1.0s infinite linear);
  }
}

a,
.app-link {
  color: @applink-color;
  text-decoration: underline;
  cursor: pointer;

  &:focus {
    outline-color: @applink-color;
    text-decoration: none;
  }
}

/* --- z-index --- */
/* Rule: All child elements of .scout get the same z-index 0 assigned. This spawns a new stacking context for each */
/* of these elements (iff they are "positioned"). To bring a new element to the top, add it to the end of the list. */
/* https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context */
.scout > .desktop-navigation,
.scout > .desktop-taskbar,
.scout > .desktop-bench,
.scout > .splitter,
.scout > .glasspane,
.scout > .busyindicator,
.scout > .dialog,
.scout > .form,
.scout > .messagebox,
.scout > .tooltip,
.scout > .popup,
.scout > .form-tool-popup,
.scout > .smart-field-popup,
.scout > .date-picker-popup {
  z-index: 0;
}
/* The .offline-message div is inserted as first child of .scout, therefore we increase the z-index by 1. The */
/* element will therefore always be drawn at the top. */
.scout > .notifications {
  z-index: 1;
}
