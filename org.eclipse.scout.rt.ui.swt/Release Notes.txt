28.09.2010 sle
In our project we had the problem, that from two different Applications two KeyStrokeManager where instanciated. The KeyStrokeManager were not
aware of the SwtEnvironment where they were instatiatetd from. This resulted that key-strokes where "used" two times.
Problem: If one would close a SmartfieldProposal with an esc-keystroke, the whole form would close.
Solution: The KeyStrokeManager is aware of the SwtEnvironment where it was instaciated and gives the environment to the filters.
old:
      getEnvironment().addKeyStrokeFilter(textField, new ISwtKeyStrokeFilter(){
        @Override
        public boolean accept(Event e){
          return doSomething();
        }
      });
new:
      getEnvironment().addKeyStrokeFilter(textField, new ISwtKeyStrokeFilter(){
        @Override
        public boolean accept(Event e, ISwtEnvironment environment){
          if(getEnvironment().equals(environment)){
            return doSomething();
          }
          return false;
        }
      });

10.02.2011 sle
see Release Notes in org.eclipse.scout.rt.client

26.04.2011 cgu
[contributed by cgu Guglielmo Claudio, BSI Systems Integration AG, Switzerland]
Problem:
The behavior of displaying the status of a table changed sometime in 2010. In order to display the status the “old” way one needs access to the status line of every open view and editor.
Solution:
Extended ISwtEnvironment with a method setStatusLineMessage.
Migration: If you used the method ISwtScoutPart.setStatus you have to adjust your code as following: part.setStatusLineMessage(null, status.getMessage());

01.07.2011 aho
Ticket 101'754 focused on some selection problems in the JFace(SWT) tree. The JFace tree forces the selection of the next (null) element when a selected tree item gets removed. This SWT event gets scheduled after the model code is executed.
The problem was when a tree node gets removed and another node gets selected within the same model method (e.g. execAction on a menu) the selection is not visible in the UI.
Solution:
While updating node structures forced by a model event the SWT selection events getting ignored
Migration:
None

11.07.2011 aho
Ticket: 102'194 is about taking screen shots of forms. The problem is since the form is opened async the print event does not get to the form.
Solution:
Back event to notify the model once a screen shot is done. Furthermore a PrintApplicationAction is created to take screen shots of the whole application.
Migration:
none

10.08.2011 abr
Bugzilla Ticket 354350
BSI Ticket 104'974
Problem:
The SwtScoutHtmlField transforms the document to display into an UTF-8 encoded byte array. If the transformed document contains a meta-tag "Content-Type"
defining an encoding other than UTF-8 or if the default encoding of the underlying (default) browser is not UTF-8, invalid characters may displayed.
Solution:
The document to be displayed is augmented by an UTF-8 Content-Type definition of a possibly already existing one is rewritten
(modified org.eclipse.scout.rt.ui.swt.AbstractSwtEnvironment.styleHtmlText(Control, String)).
Migration:
none
