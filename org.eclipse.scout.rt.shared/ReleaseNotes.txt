14.09.2010 imo
Removed org.eclipse.scout.rt.shared.security.AllAccessPermission since it never worked and is not a valid jaas concept
Migration:
replace by java.security.AllPermission

21.12.2010 imo
Extracted DataModel with entities and attributes out of AbstractComposerField and moved to org.eclipse.scout.rt.shared.data.model
Migration: None, sometimes organize imports is necessary.
Legacy: There is legacy support with deprecated AbstractComposerAttribute and AbstractComposerEntity. Also inner attributes and entities of a composer field are still valid
and wrapped in a ComposerFieldDataModel.
Renaming:
AbstractComposerAttribute -> AbstractDataModelAttribute
AbstractComposerEntity -> AbstractDataModelEntity
ComposerAttributeInjector -> DataModelAttributeInjector
ComposerOp -> DataModelAttributeOp
ComposerConstants -> DataModelConstants
ComposerUtility -> DataModelUtility
IComposerAttribute -> IDataModelAttribute
IComposerOp -> IDataModelAttributeOp
IComposerEntity -> IDataModelEntity

10.02.2011 abr
Ticket 98'889
AbstractPropertyData.isValueSet() was not taken into account when importing a form data.

11.02.2011 jgu
New translations inserted for the languages bg,cs,da,el,es,fi,fr_BE,fr,hr,hu,it,nl_BE,nl,no,pl,pt_br,ru,se,sk,sl,sr,tr,zh_TW,zh.

17.02.2011 imo
added support for safe and lenient permissions transfer via service tunnel overriding serialization of Permissions object to list of serialized objects thus supporting skipping unknown permissions instead of skipping the whole Permissions class
see ServiceTunnelInputStream, ServiceTunnelOutputStream, LenientPermissionWrapper, LenientPermissionsWrapper

14.03.2011 dwi
org.eclipse.scout.rt.shared
- AbstractDataModelEntity
  Bug-Fix: Initialization of child entities

18.03.2011 imo
Migration of legacy: moving remaining legacy logic from client to server
Added TokenBasedSearchFilter, TokenBasedSearchFilterService to support token-based query building on logical level.
Added LegacySearchFilterService to support global client side legacy handling of search behaviour.
Migration: None

01.06.2011 imo
Internal security audit
- server stack traces must not be sent to client
- server log must contain all exceptions (except intended business logic exceptions)
- enhanced access control on gui remote service calls: see enahncements on IAccessControlService.checkServiceTunnelAccess
- adding logout service and calling it from IClientSession.stop();
Migration: None

14.10.2011 abr [contributed by Adrian Moser, BSI Business Systems Integration AG]
bugzilla ticket: 360946
Bookmarks do not save column visibility
Migration: None

17.10.2011 imo Iteration 2 of scout validation framwework
In order to modularize the validation package, the following classes have moved:
org.eclipse.scout.rt.shared.data.IValidator -> org.eclipse.scout.rt.shared.validate.IValidator
org.eclipse.scout.rt.shared.data.DefaultValidator -> org.eclipse.scout.rt.shared.validate.DefaultValidator
org.eclipse.scout.rt.shared.util.ValidationUtility -> org.eclipse.scout.rt.shared.validate.ValidationUtility
org.eclipse.scout.rt.shared.data.form.InputValidation -> org.eclipse.scout.rt.shared.validate.InputValidation
org.eclipse.scout.rt.shared.data.form.OutputValidation -> org.eclipse.scout.rt.shared.validate.OutputValidation
org.eclipse.scout.rt.shared.data.form.ValidationStrategy -> org.eclipse.scout.rt.shared.validate.IValidationStrategy
And the following code needs to be replaced:
IValidationStrategy.NO_CHECK -> IValidationStrategy.NO_CHECK.class
IValidationStrategy.QUERY -> IValidationStrategy.QUERY.class
IValidationStrategy.PROCESS -> IValidationStrategy.PROCESS.class
The validation now covers form data field validation using ValidationRule as well as method parameter and bean field validation using
annotations in org.eclipse.scout.rt.shared.validate.annotations.
These include:
@CodeValue
@LookupValue
@Mandatory
@MaxLength
@MaxValue
@MinLength
@MinValue
@RegexMatch
@Treat0AsNull
@FieldReference (meta)
@ValidateAnnotationMarker (meta)

The (default) input validation on server side is activated using the config.ini property
org.eclipse.scout.rt.server.validateInput=true
The main classes doing validation are (in call order):
- ServiceTunnelServlet
- DefaultTransactionDelegate
- DefaultValidator
- IValidateCheck (and subtypes)

18.10.2011 aho
bugzilla ticket: 361256
To make reuse of the ServletFilters in RAP projects. The following classes
should be moved to the 'org.eclipse.scout.http.servletfilter' bundle:
- org.eclipse.scout.rt.server.servlet.filter.AbstractChainableSecurityFilter
- org.eclipse.scout.rt.server.servlet.filter.AnonymousSecurityFilter
- org.eclipse.scout.rt.server.servlet.filter.BasicSecurityFilter
- org.eclipse.scout.rt.server.servlet.filter.DataSourceSecurityFilter
- org.eclipse.scout.rt.server.servlet.filter.LDAPSecurityFilter
- org.eclipse.scout.rt.server.servlet.filter.TomcatSecurityFilter

All servlet filters in the 'org.eclipse.scout.rt.server' bundle were kept as @deprecated subclasses of the moved ones.

Furthermore the
'org.eclipse.scout.rt.shared.services.common.security.SimplePrincipal' should
be moved to the 'org.eclipse.scout.commons' bundle.

Migration: change all 'org.eclipse.scout.rt.shared.services.common.security.SimplePrincipal' imports to 'org.eclipse.scout.commons.security.SimplePrincipal'.
